// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package forms

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson44a4302cDecodeQuickflowGatewayInternalDeliveryHttpForms(in *jlexer.Lexer, out *PrivateChatInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "username":
			out.Username = string(in.String())
		case "activity":
			(out.Activity).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson44a4302cEncodeQuickflowGatewayInternalDeliveryHttpForms(out *jwriter.Writer, in PrivateChatInfo) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Username != "" {
		const prefix string = ",\"username\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(in.Username))
	}
	if true {
		const prefix string = ",\"activity\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(in.Activity).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PrivateChatInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson44a4302cEncodeQuickflowGatewayInternalDeliveryHttpForms(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PrivateChatInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson44a4302cEncodeQuickflowGatewayInternalDeliveryHttpForms(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PrivateChatInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson44a4302cDecodeQuickflowGatewayInternalDeliveryHttpForms(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PrivateChatInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson44a4302cDecodeQuickflowGatewayInternalDeliveryHttpForms(l, v)
}
func easyjson44a4302cDecodeQuickflowGatewayInternalDeliveryHttpForms1(in *jlexer.Lexer, out *GetNumUnreadChatsForm) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "chats_count":
			out.ChatsCount = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson44a4302cEncodeQuickflowGatewayInternalDeliveryHttpForms1(out *jwriter.Writer, in GetNumUnreadChatsForm) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"chats_count\":"
		out.RawString(prefix[1:])
		out.Int(int(in.ChatsCount))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetNumUnreadChatsForm) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson44a4302cEncodeQuickflowGatewayInternalDeliveryHttpForms1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetNumUnreadChatsForm) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson44a4302cEncodeQuickflowGatewayInternalDeliveryHttpForms1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetNumUnreadChatsForm) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson44a4302cDecodeQuickflowGatewayInternalDeliveryHttpForms1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetNumUnreadChatsForm) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson44a4302cDecodeQuickflowGatewayInternalDeliveryHttpForms1(l, v)
}
func easyjson44a4302cDecodeQuickflowGatewayInternalDeliveryHttpForms2(in *jlexer.Lexer, out *ChatsOut) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(ChatsOut, 0, 0)
			} else {
				*out = ChatsOut{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v1 ChatOut
			(v1).UnmarshalEasyJSON(in)
			*out = append(*out, v1)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson44a4302cEncodeQuickflowGatewayInternalDeliveryHttpForms2(out *jwriter.Writer, in ChatsOut) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v2, v3 := range in {
			if v2 > 0 {
				out.RawByte(',')
			}
			(v3).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v ChatsOut) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson44a4302cEncodeQuickflowGatewayInternalDeliveryHttpForms2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (chats ChatsOut) MarshalEasyJSON(w *jwriter.Writer) {
	// Начинаем сериализацию среза
	w.RawByte('[') // Начало массива JSON
	for i, chat := range chats {
		if i > 0 {
			w.RawByte(',')
		}
		chat.MarshalEasyJSON(w) // Сериализация каждого элемента
	}
	w.RawByte(']') // Конец массива JSON
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChatsOut) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson44a4302cDecodeQuickflowGatewayInternalDeliveryHttpForms2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChatsOut) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson44a4302cDecodeQuickflowGatewayInternalDeliveryHttpForms2(l, v)
}
func easyjson44a4302cDecodeQuickflowGatewayInternalDeliveryHttpForms3(in *jlexer.Lexer, out *ChatOut) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = string(in.String())
		case "name":
			out.Name = string(in.String())
		case "created_at":
			out.CreatedAt = string(in.String())
		case "updated_at":
			out.UpdatedAt = string(in.String())
		case "avatar_url":
			out.AvatarURL = string(in.String())
		case "type":
			out.Type = string(in.String())
		case "last_message":
			if in.IsNull() {
				in.Skip()
				out.LastMessage = nil
			} else {
				if out.LastMessage == nil {
					out.LastMessage = new(MessageOut)
				}
				(*out.LastMessage).UnmarshalEasyJSON(in)
			}
		case "online":
			if in.IsNull() {
				in.Skip()
				out.IsOnline = nil
			} else {
				if out.IsOnline == nil {
					out.IsOnline = new(bool)
				}
				*out.IsOnline = bool(in.Bool())
			}
		case "last_seen":
			out.LastSeen = string(in.String())
		case "username":
			out.Username = string(in.String())
		case "last_read_by_other":
			out.LastReadByOther = string(in.String())
		case "last_read_by_me":
			out.LastReadByMe = string(in.String())
		case "unread_messages":
			out.NumUnreadMessages = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson44a4302cEncodeQuickflowGatewayInternalDeliveryHttpForms3(out *jwriter.Writer, in ChatOut) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.String(string(in.ID))
	}
	if in.Name != "" {
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"updated_at\":"
		out.RawString(prefix)
		out.String(string(in.UpdatedAt))
	}
	if in.AvatarURL != "" {
		const prefix string = ",\"avatar_url\":"
		out.RawString(prefix)
		out.String(string(in.AvatarURL))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	if in.LastMessage != nil {
		const prefix string = ",\"last_message\":"
		out.RawString(prefix)
		(*in.LastMessage).MarshalEasyJSON(out)
	}
	if in.IsOnline != nil {
		const prefix string = ",\"online\":"
		out.RawString(prefix)
		out.Bool(bool(*in.IsOnline))
	}
	if in.LastSeen != "" {
		const prefix string = ",\"last_seen\":"
		out.RawString(prefix)
		out.String(string(in.LastSeen))
	}
	if in.Username != "" {
		const prefix string = ",\"username\":"
		out.RawString(prefix)
		out.String(string(in.Username))
	}
	if in.LastReadByOther != "" {
		const prefix string = ",\"last_read_by_other\":"
		out.RawString(prefix)
		out.String(string(in.LastReadByOther))
	}
	if in.LastReadByMe != "" {
		const prefix string = ",\"last_read_by_me\":"
		out.RawString(prefix)
		out.String(string(in.LastReadByMe))
	}
	{
		const prefix string = ",\"unread_messages\":"
		out.RawString(prefix)
		out.Int(int(in.NumUnreadMessages))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChatOut) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson44a4302cEncodeQuickflowGatewayInternalDeliveryHttpForms3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChatOut) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson44a4302cEncodeQuickflowGatewayInternalDeliveryHttpForms3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChatOut) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson44a4302cDecodeQuickflowGatewayInternalDeliveryHttpForms3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChatOut) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson44a4302cDecodeQuickflowGatewayInternalDeliveryHttpForms3(l, v)
}

// Code generated by MockGen. DO NOT EDIT.
// Source: ./shared/proto/file_service/file_service.pb.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockisUploadFileRequest_Data is a mock of isUploadFileRequest_Data interface.
type MockisUploadFileRequest_Data struct {
	ctrl     *gomock.Controller
	recorder *MockisUploadFileRequest_DataMockRecorder
}

// MockisUploadFileRequest_DataMockRecorder is the mock recorder for MockisUploadFileRequest_Data.
type MockisUploadFileRequest_DataMockRecorder struct {
	mock *MockisUploadFileRequest_Data
}

// NewMockisUploadFileRequest_Data creates a new mock instance.
func NewMockisUploadFileRequest_Data(ctrl *gomock.Controller) *MockisUploadFileRequest_Data {
	mock := &MockisUploadFileRequest_Data{ctrl: ctrl}
	mock.recorder = &MockisUploadFileRequest_DataMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockisUploadFileRequest_Data) EXPECT() *MockisUploadFileRequest_DataMockRecorder {
	return m.recorder
}

// isUploadFileRequest_Data mocks base method.
func (m *MockisUploadFileRequest_Data) isUploadFileRequest_Data() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "isUploadFileRequest_Data")
}

// isUploadFileRequest_Data indicates an expected call of isUploadFileRequest_Data.
func (mr *MockisUploadFileRequest_DataMockRecorder) isUploadFileRequest_Data() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "isUploadFileRequest_Data", reflect.TypeOf((*MockisUploadFileRequest_Data)(nil).isUploadFileRequest_Data))
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: sticker_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	file_service "quickflow/shared/proto/file_service"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StickerPack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Stickers  []*file_service.File   `protobuf:"bytes,3,rep,name=stickers,proto3" json:"stickers,omitempty"`
	CreatorId string                 `protobuf:"bytes,4,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *StickerPack) Reset() {
	*x = StickerPack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sticker_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StickerPack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StickerPack) ProtoMessage() {}

func (x *StickerPack) ProtoReflect() protoreflect.Message {
	mi := &file_sticker_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StickerPack.ProtoReflect.Descriptor instead.
func (*StickerPack) Descriptor() ([]byte, []int) {
	return file_sticker_service_proto_rawDescGZIP(), []int{0}
}

func (x *StickerPack) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StickerPack) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StickerPack) GetStickers() []*file_service.File {
	if x != nil {
		return x.Stickers
	}
	return nil
}

func (x *StickerPack) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *StickerPack) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *StickerPack) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type AddStickerPackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StickerPack *StickerPack `protobuf:"bytes,1,opt,name=sticker_pack,json=stickerPack,proto3" json:"sticker_pack,omitempty"`
}

func (x *AddStickerPackRequest) Reset() {
	*x = AddStickerPackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sticker_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStickerPackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStickerPackRequest) ProtoMessage() {}

func (x *AddStickerPackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sticker_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStickerPackRequest.ProtoReflect.Descriptor instead.
func (*AddStickerPackRequest) Descriptor() ([]byte, []int) {
	return file_sticker_service_proto_rawDescGZIP(), []int{1}
}

func (x *AddStickerPackRequest) GetStickerPack() *StickerPack {
	if x != nil {
		return x.StickerPack
	}
	return nil
}

type AddStickerPackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StickerPack *StickerPack `protobuf:"bytes,1,opt,name=sticker_pack,json=stickerPack,proto3" json:"sticker_pack,omitempty"`
}

func (x *AddStickerPackResponse) Reset() {
	*x = AddStickerPackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sticker_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStickerPackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStickerPackResponse) ProtoMessage() {}

func (x *AddStickerPackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sticker_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStickerPackResponse.ProtoReflect.Descriptor instead.
func (*AddStickerPackResponse) Descriptor() ([]byte, []int) {
	return file_sticker_service_proto_rawDescGZIP(), []int{2}
}

func (x *AddStickerPackResponse) GetStickerPack() *StickerPack {
	if x != nil {
		return x.StickerPack
	}
	return nil
}

type GetStickerPackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetStickerPackRequest) Reset() {
	*x = GetStickerPackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sticker_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStickerPackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStickerPackRequest) ProtoMessage() {}

func (x *GetStickerPackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sticker_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStickerPackRequest.ProtoReflect.Descriptor instead.
func (*GetStickerPackRequest) Descriptor() ([]byte, []int) {
	return file_sticker_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetStickerPackRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetStickerPackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StickerPack *StickerPack `protobuf:"bytes,1,opt,name=sticker_pack,json=stickerPack,proto3" json:"sticker_pack,omitempty"`
}

func (x *GetStickerPackResponse) Reset() {
	*x = GetStickerPackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sticker_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStickerPackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStickerPackResponse) ProtoMessage() {}

func (x *GetStickerPackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sticker_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStickerPackResponse.ProtoReflect.Descriptor instead.
func (*GetStickerPackResponse) Descriptor() ([]byte, []int) {
	return file_sticker_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetStickerPackResponse) GetStickerPack() *StickerPack {
	if x != nil {
		return x.StickerPack
	}
	return nil
}

type DeleteStickerPackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackId string `protobuf:"bytes,1,opt,name=pack_id,json=packId,proto3" json:"pack_id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeleteStickerPackRequest) Reset() {
	*x = DeleteStickerPackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sticker_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStickerPackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStickerPackRequest) ProtoMessage() {}

func (x *DeleteStickerPackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sticker_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStickerPackRequest.ProtoReflect.Descriptor instead.
func (*DeleteStickerPackRequest) Descriptor() ([]byte, []int) {
	return file_sticker_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteStickerPackRequest) GetPackId() string {
	if x != nil {
		return x.PackId
	}
	return ""
}

func (x *DeleteStickerPackRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteStickerPackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteStickerPackResponse) Reset() {
	*x = DeleteStickerPackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sticker_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStickerPackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStickerPackResponse) ProtoMessage() {}

func (x *DeleteStickerPackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sticker_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStickerPackResponse.ProtoReflect.Descriptor instead.
func (*DeleteStickerPackResponse) Descriptor() ([]byte, []int) {
	return file_sticker_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteStickerPackResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetStickerPacksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Count  int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Offset int32  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetStickerPacksRequest) Reset() {
	*x = GetStickerPacksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sticker_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStickerPacksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStickerPacksRequest) ProtoMessage() {}

func (x *GetStickerPacksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sticker_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStickerPacksRequest.ProtoReflect.Descriptor instead.
func (*GetStickerPacksRequest) Descriptor() ([]byte, []int) {
	return file_sticker_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetStickerPacksRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetStickerPacksRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetStickerPacksRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetStickerPacksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StickerPacks []*StickerPack `protobuf:"bytes,1,rep,name=sticker_packs,json=stickerPacks,proto3" json:"sticker_packs,omitempty"`
}

func (x *GetStickerPacksResponse) Reset() {
	*x = GetStickerPacksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sticker_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStickerPacksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStickerPacksResponse) ProtoMessage() {}

func (x *GetStickerPacksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sticker_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStickerPacksResponse.ProtoReflect.Descriptor instead.
func (*GetStickerPacksResponse) Descriptor() ([]byte, []int) {
	return file_sticker_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetStickerPacksResponse) GetStickerPacks() []*StickerPack {
	if x != nil {
		return x.StickerPacks
	}
	return nil
}

type GetStickerPackByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetStickerPackByNameRequest) Reset() {
	*x = GetStickerPackByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sticker_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStickerPackByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStickerPackByNameRequest) ProtoMessage() {}

func (x *GetStickerPackByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sticker_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStickerPackByNameRequest.ProtoReflect.Descriptor instead.
func (*GetStickerPackByNameRequest) Descriptor() ([]byte, []int) {
	return file_sticker_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetStickerPackByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetStickerPackByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StickerPack *StickerPack `protobuf:"bytes,1,opt,name=sticker_pack,json=stickerPack,proto3" json:"sticker_pack,omitempty"`
}

func (x *GetStickerPackByNameResponse) Reset() {
	*x = GetStickerPackByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sticker_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStickerPackByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStickerPackByNameResponse) ProtoMessage() {}

func (x *GetStickerPackByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sticker_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStickerPackByNameResponse.ProtoReflect.Descriptor instead.
func (*GetStickerPackByNameResponse) Descriptor() ([]byte, []int) {
	return file_sticker_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetStickerPackByNameResponse) GetStickerPack() *StickerPack {
	if x != nil {
		return x.StickerPack
	}
	return nil
}

var File_sticker_service_proto protoreflect.FileDescriptor

var file_sticker_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x73,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x08, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x55, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0c, 0x73, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x0b, 0x73, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x22, 0x56, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x53, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x61,
	0x63, 0x6b, 0x52, 0x0b, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x22,
	0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x70, 0x61,
	0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50,
	0x61, 0x63, 0x6b, 0x52, 0x0b, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b,
	0x22, 0x4c, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x35,
	0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x5f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x59, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x63,
	0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50,
	0x61, 0x63, 0x6b, 0x52, 0x0c, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b,
	0x73, 0x22, 0x31, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50,
	0x61, 0x63, 0x6b, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x0b, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x61,
	0x63, 0x6b, 0x32, 0xff, 0x03, 0x0a, 0x0e, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x53,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x50, 0x61, 0x63, 0x6b, 0x12, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x64, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x50, 0x61, 0x63, 0x6b, 0x12, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sticker_service_proto_rawDescOnce sync.Once
	file_sticker_service_proto_rawDescData = file_sticker_service_proto_rawDesc
)

func file_sticker_service_proto_rawDescGZIP() []byte {
	file_sticker_service_proto_rawDescOnce.Do(func() {
		file_sticker_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_sticker_service_proto_rawDescData)
	})
	return file_sticker_service_proto_rawDescData
}

var file_sticker_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_sticker_service_proto_goTypes = []interface{}{
	(*StickerPack)(nil),                  // 0: chat_service.StickerPack
	(*AddStickerPackRequest)(nil),        // 1: chat_service.AddStickerPackRequest
	(*AddStickerPackResponse)(nil),       // 2: chat_service.AddStickerPackResponse
	(*GetStickerPackRequest)(nil),        // 3: chat_service.GetStickerPackRequest
	(*GetStickerPackResponse)(nil),       // 4: chat_service.GetStickerPackResponse
	(*DeleteStickerPackRequest)(nil),     // 5: chat_service.DeleteStickerPackRequest
	(*DeleteStickerPackResponse)(nil),    // 6: chat_service.DeleteStickerPackResponse
	(*GetStickerPacksRequest)(nil),       // 7: chat_service.GetStickerPacksRequest
	(*GetStickerPacksResponse)(nil),      // 8: chat_service.GetStickerPacksResponse
	(*GetStickerPackByNameRequest)(nil),  // 9: chat_service.GetStickerPackByNameRequest
	(*GetStickerPackByNameResponse)(nil), // 10: chat_service.GetStickerPackByNameResponse
	(*file_service.File)(nil),            // 11: file_service.File
	(*timestamppb.Timestamp)(nil),        // 12: google.protobuf.Timestamp
}
var file_sticker_service_proto_depIdxs = []int32{
	11, // 0: chat_service.StickerPack.stickers:type_name -> file_service.File
	12, // 1: chat_service.StickerPack.created_at:type_name -> google.protobuf.Timestamp
	12, // 2: chat_service.StickerPack.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 3: chat_service.AddStickerPackRequest.sticker_pack:type_name -> chat_service.StickerPack
	0,  // 4: chat_service.AddStickerPackResponse.sticker_pack:type_name -> chat_service.StickerPack
	0,  // 5: chat_service.GetStickerPackResponse.sticker_pack:type_name -> chat_service.StickerPack
	0,  // 6: chat_service.GetStickerPacksResponse.sticker_packs:type_name -> chat_service.StickerPack
	0,  // 7: chat_service.GetStickerPackByNameResponse.sticker_pack:type_name -> chat_service.StickerPack
	1,  // 8: chat_service.StickerService.AddStickerPack:input_type -> chat_service.AddStickerPackRequest
	3,  // 9: chat_service.StickerService.GetStickerPack:input_type -> chat_service.GetStickerPackRequest
	5,  // 10: chat_service.StickerService.DeleteStickerPack:input_type -> chat_service.DeleteStickerPackRequest
	7,  // 11: chat_service.StickerService.GetStickerPacks:input_type -> chat_service.GetStickerPacksRequest
	9,  // 12: chat_service.StickerService.GetStickerPackByName:input_type -> chat_service.GetStickerPackByNameRequest
	2,  // 13: chat_service.StickerService.AddStickerPack:output_type -> chat_service.AddStickerPackResponse
	4,  // 14: chat_service.StickerService.GetStickerPack:output_type -> chat_service.GetStickerPackResponse
	6,  // 15: chat_service.StickerService.DeleteStickerPack:output_type -> chat_service.DeleteStickerPackResponse
	8,  // 16: chat_service.StickerService.GetStickerPacks:output_type -> chat_service.GetStickerPacksResponse
	10, // 17: chat_service.StickerService.GetStickerPackByName:output_type -> chat_service.GetStickerPackByNameResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_sticker_service_proto_init() }
func file_sticker_service_proto_init() {
	if File_sticker_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sticker_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StickerPack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sticker_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStickerPackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sticker_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStickerPackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sticker_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStickerPackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sticker_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStickerPackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sticker_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStickerPackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sticker_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStickerPackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sticker_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStickerPacksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sticker_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStickerPacksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sticker_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStickerPackByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sticker_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStickerPackByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sticker_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sticker_service_proto_goTypes,
		DependencyIndexes: file_sticker_service_proto_depIdxs,
		MessageInfos:      file_sticker_service_proto_msgTypes,
	}.Build()
	File_sticker_service_proto = out.File
	file_sticker_service_proto_rawDesc = nil
	file_sticker_service_proto_goTypes = nil
	file_sticker_service_proto_depIdxs = nil
}

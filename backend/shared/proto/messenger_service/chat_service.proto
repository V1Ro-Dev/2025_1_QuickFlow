syntax = "proto3";

package chat_service;
option go_package = "quickflow/messenger_service/internal/delivery/grpc/proto";

import "google/protobuf/timestamp.proto";
import "file_service/file_service.proto";
import "message_service.proto";

enum ChatType {
  CHAT_TYPE_PRIVATE = 0;
  CHAT_TYPE_GROUP = 1;
}

message Chat {
  string id = 1;
  string name = 2;
  string avatar_url = 3;
  ChatType type = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  messenger_service.Message last_message = 7;
  google.protobuf.Timestamp last_read_by_others = 8;
  google.protobuf.Timestamp last_read_by_me = 9;
}

message ChatCreationInfo {
  string name = 1;
  file_service.File avatar = 2;
  ChatType type = 3;
}

message GetUserChatsRequest {
  string user_id = 1;
  int32 chats_num = 2;
  google.protobuf.Timestamp updated_at = 3;
}

message GetUserChatsResponse {
  repeated Chat chats = 1;
}

message CreateChatRequest {
  string user_id = 1;
  ChatCreationInfo chat_info = 2;
}

message CreateChatResponse {
  Chat chat = 1;
}

message GetChatParticipantsRequest {
  string chat_id = 1;
}

message GetChatParticipantsResponse {
  repeated string participant_ids = 1;
}

message GetPrivateChatRequest {
  string user1_id = 1;
  string user2_id = 2;
}

message GetPrivateChatResponse {
  Chat chat = 1;
}

message DeleteChatRequest {
  string chat_id = 1;
}

message DeleteChatResponse {
  bool success = 1;
}

message GetChatRequest {
  string chat_id = 1;
}

message GetChatResponse {
  Chat chat = 1;
}

message JoinChatRequest {
  string chat_id = 1;
  string user_id = 2;
}

message JoinChatResponse {
  bool success = 1;
}

message LeaveChatRequest {
  string chat_id = 1;
  string user_id = 2;
}

message LeaveChatResponse {
  bool success = 1;
}

service ChatService {
  rpc GetUserChats(GetUserChatsRequest) returns (GetUserChatsResponse);
  rpc CreateChat(CreateChatRequest) returns (CreateChatResponse);
  rpc GetPrivateChat(GetPrivateChatRequest) returns (GetPrivateChatResponse);
  rpc DeleteChat(DeleteChatRequest) returns (DeleteChatResponse);
  rpc GetChat(GetChatRequest) returns (GetChatResponse);
  rpc JoinChat(JoinChatRequest) returns (JoinChatResponse);
  rpc LeaveChat(LeaveChatRequest) returns (LeaveChatResponse);
  rpc GetUserChatsById(GetUserChatsRequest) returns (GetUserChatsResponse);
  rpc GetChatParticipants(GetChatParticipantsRequest) returns (GetChatParticipantsResponse);
}